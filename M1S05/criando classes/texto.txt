Crie uma classe para um Produto, com as seguintes propriedades: 
nome, preco, emEstoque, quantidade.

Todas essas propriedades precisam ser recebidas no construtor da classe.


===================================================================================

Crie uma classe Pedidos,
 com as propriedades numeroPedido,
  dataPedido,
   estaPago,
    listaProdutos e 
    nomeCliente.

Utilize o método construtor para que, 
a cada instancia dessa classe,
 um número do pedido e o nome do cliente seja informado, 
a dataPedido seja a data atual
 ( new Date( ).toLocaleDateString( ) ), 
o estaPago seja falso e a listaProdutos seja um array vazio.

=================================================================================

Dentro da classe Pedido,
 adicione um método adicionarProduto,
  que recebe como argumento um objeto do
   tipo Produto ( caso deseje, você pode realizar uma validação
    utilizando o operador instanceof).

Este método deve adicionar (push)
 à propriedade listaProdutos o produto passado como argumento.

 ===========================================================================

 Dentro da classe Pedido,
  crie outro método, 
  chamado calcularTotal, 
  que deve iterar sobre a listaProdutos 
  e retornar o valor total do pedido.
   Lembre-se de multiplicar a quantidade 
   de cada produto
    pelo seu valor quando realizar a soma
     (quantidade e valor são propriedades da classe Produto!).

==============================================================

Crie 5 instâncias de produtos, 
com as características que desejar.

Crie 2 instâncias de pedidos.{

    O primeiro pedido deve ter o número '20220001'{
         e o nome do cliente à sua escolha
    }

    {
        . O segundo pedido deve ser o '20220002'.
    }


}
Utilizando o método adicionarProduto{

    , adicione (3 dos 5 produtos ao pedido '20220001')
    e, o restante, ao pedido '20220002'.

}

========================================================================

Estas classes criadas durante os exercícios
 estão prontas para serem utilizadas em uma aplicação real.
  Por exemplo: podemos criar um sistema de pedidos, e,
   através da propriedade listaProdutos,
    podemos realizar uma iteração 
    nos produtos de determinado pedido e imprimir cada um deles em tela.

Podemos chamar o método calcularTotal
 para exibir em tela o valor total de um determinado pedido.

A princípio, vamos apenas exibir essas informações no console.
 Usando o método de array forEach, 
 faça um console.log em cada um dos produtos de cada um dos pedidos.
  O texto de saída pode ser qualquer um, à seu critério. Por exemplo:

Produto: ${produto.nome} | Valor un: ${produto.preco} | Total: ${produto.preco * produto.quantidade}

Faça também um console.log para exibir o valor total de cada pedido. Exemplo:

Preço total do pedido: R$ ${pedido.calcularTotal( )}

Dica: você pode utilizar o toLocaleString em um número para formata-lo como moeda. Dê uma olhadinha neste link...



============================================================

Utilizando o setInterval, crie uma função que mostre o horário atual e atualize automaticamente a cada 2 segundos.

O horário deve ser mostrado no console, no formato HH:MM:SS.

 

 